{"version":3,"sources":["logo.svg","reducers/initialState.js","reducers/index.js","reducers/adminReducer.js","constants/actionTypes.js","components/FilterBy/FilterBy.tsx","components/SortBy/SortBy.tsx","actions/index.js","container/index.ts","components/Product/Product.tsx","components/Common/SnackBar/SnackBar.tsx","components/SortBy/SortByMobile.tsx","components/FilterBy/FilterByMobile.tsx","components/ListPage/ListPage.tsx","components/CartProduct/CartProduct.tsx","components/CartProduct/CartProductMobile.tsx","components/CartPriceDetails/CartPriceDetails.tsx","components/Routing/RouteConfig.tsx","components/CartPage/CartPage.tsx","components/CartIcon/CartIcon.tsx","components/Search/Search.tsx","store/configureStore.js","components/Common/Header/Header.tsx","components/Common/Footer/Footer.tsx","components/Routing/RouteComponent.tsx","components/MainApp.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","addedCartProduct","selectedItem","allProducts","Products","items","rootReducer","combineReducers","adminReducer","state","Object","assign","initialState","action","type","allProduct","data","removedProduct","marks","value","label","valuetext","FilterBy","props","handleFilterPrice","React","setValue","className","Slider","min","max","onChange","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","id","SortBy","sortByPrice","onClick","resetApp","initialSetup","addProductToCart","updateProdcutList","updateCartProdcutList","loadProdcutList","connect","initialText","listProducts","dispatch","bindActionCreators","Actions","Product","product","name","image","price","discount","Card","CardActionArea","alt","src","CardContent","Grid","container","item","xs","sm","icon","faRupeeSign","actual","display","CardActions","Button","size","color","Alert","elevation","variant","SnackbarComponent","Snackbar","open","anchorOrigin","vertical","horizontal","severity","message","PaperComponent","handle","cancel","Paper","SortByMobile","handleClose","console","info","Dialog","onClose","DialogTitle","style","cursor","DialogContent","DialogContentText","RadioGroup","aria-label","target","FormControlLabel","control","Radio","DialogActions","autoFocus","FilterByMobile","filterByPrice","Container","openMessgeContainer","fromPrice","toPrice","isShow","isShowFilter","productObj","triggerMsg","sortKey","updateProdcut","sort","a","b","setState","filter","msg","setTimeout","isOpenSortBy","isOpenFilterBy","this","Hidden","only","lg","xl","spacing","length","map","row","index","CartProduct","handleCartCount","uniqueDataCount","count","faMinusCircle","textAlign","border","faPlusCircle","CartProductMobile","faMinus","faPlus","CartPriceDetails","cartProduct","cartPriceData","cartCount","cartDiscountCount","totalPrice","Routes","path","component","ListPage","key","isCheckCount","JSON","stringify","uniqueData","uniques","itemsFound","val","stringified","push","obj","productCount","getPercentage","num","per","Math","ceil","totalPriceCount","cartUniqueProduct","CartIcon","to","faShoppingCart","Search","isSearch","toggleSearchBar","TextField","onKeyPress","e","toLowerCase","includes","faSearch","searchStr","alignItems","faStar","direction","justify","Footer","RouteComponent","routes","route","exact","from","store","createStore","MainApp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.df80b870.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as Products from \"./cart.json\"\r\nexport default {\r\n    addedCartProduct : [],\r\n    selectedItem : 0,\r\n    allProducts : Products.default.items\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport adminReducer from \"./adminReducer\";\r\n// Combines all reducers to a single reducer function\r\nconst rootReducer = combineReducers({\r\n  adminReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import initialState from \"./initialState\";\r\nimport * as types from \"../constants/actionTypes\";\r\nimport * as Products from \"./cart.json\"\r\nexport default function(state = Object.assign(Products.default, initialState) , action) {\r\n  switch (action.type) {\r\n    case types.ADD_PRODUCT_TO_CART : {\r\n      let allProduct = [...state.addedCartProduct, action.data ];\r\n      return { ...state, addedCartProduct: allProduct };\r\n    }\r\n    case types.REMOVE_PRODUCT_TO_CART : {\r\n      return { ...state, removedProduct: action.data };\r\n    }\r\n    case types.UPDATE_PRODUCT_LIST : {\r\n      let { selectedItem, items } = action.data;\r\n      return { ...state, items: items, selectedItem };\r\n    }\r\n    case types.UPDATE_CART_PRODUCT_LIST : {\r\n      return { ...state, addedCartProduct: action.data };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","export const ACTION_RESET_APP = \"ACTION_RESET_APP\";\r\nexport const ALL_PRODUCT_LIST = \"ALL_PRODUCT_LIST\";\r\nexport const ASSIGN_INITIAL_DATA = \"ASSIGN_INITIAL_DATA\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\nexport const REMOVE_PRODUCT_TO_CART = \"REMOVE_PRODUCT_TO_CART\";\r\nexport const UPDATE_PRODUCT_LIST = \"UPDATE_PRODUCT_LIST\";\r\nexport const UPDATE_CART_PRODUCT_LIST = \"UPDATE_CART_PRODUCT_LIST\";\r\n","import * as React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport \"./FilterBy.scss\"\r\n\r\nconst marks = [\r\n  {\r\n    value: 100,\r\n    label: '$100',\r\n  },\r\n  {\r\n    value: 50000,\r\n    label: '$50000',\r\n  },\r\n];\r\n\r\n\r\nfunction valuetext(value: number) {\r\n  return `$${value}`;\r\n}\r\n\r\nfunction FilterBy(props:any) {\r\n  let { handleFilterPrice } = props;\r\n  const [value, setValue] = React.useState<number[]>([1000, 10000]);\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    handleFilterPrice(newValue)\r\n    setValue(newValue as number[]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Slider\r\n        min={100}\r\n        max={50000}\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n        marks={marks}\r\n      />\r\n      <p id=\"range-slider\">\r\n          Price\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterBy;","import * as React from 'react';\r\nimport \"./SortBy.scss\"\r\n\r\nfunction SortBy(props:any) { \r\n  let { sortByPrice, selectedItem } = props;\r\n  return (\r\n    <>\r\n    <ul className=\"sort-by-block\">\r\n      <li className=\"sort-by-title\">Sort By</li>\r\n      <li className={selectedItem === 1 ? 'sort-by-block-slt' : ''} onClick={() => sortByPrice(1)}> Price -- High Low </li>\r\n      <li className={selectedItem === 2 ? 'sort-by-block-slt' : ''} onClick={() => sortByPrice(2)}> Price -- Low High </li>\r\n      <li className={selectedItem === 3 ? 'sort-by-block-slt' : ''} onClick={() => sortByPrice(3)}> Discount </li>\r\n    </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SortBy;","import * as types from \"../constants/actionTypes\";\r\n\r\nexport function resetApp(data) {\r\n  return {\r\n    type: types.ACTION_RESET_APP,\r\n    data\r\n  };\r\n}\r\n\r\nexport function initialSetup(data) {\r\n  return {\r\n    type: types.ASSIGN_INITIAL_DATA,\r\n    data\r\n  };\r\n}\r\nexport function addProductToCart(data) {\r\n  return {\r\n    type: types.ADD_PRODUCT_TO_CART,\r\n    data\r\n  };\r\n}\r\nexport function updateProdcutList(data) {\r\n  return {\r\n    type: types.UPDATE_PRODUCT_LIST,\r\n    data\r\n  };\r\n}\r\nexport function updateCartProdcutList(data) {\r\n  return {\r\n    type: types.UPDATE_CART_PRODUCT_LIST,\r\n    data\r\n  };\r\n}\r\nexport function loadProdcutList(data) {\r\n  return {\r\n    type: types.ALL_PRODUCT_LIST,\r\n    data\r\n  };\r\n}\r\n\r\n","import { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as Actions from '../actions';\r\n\r\n\r\nconst MapStateToProps = (state:any) => {\r\n    let { adminReducer } = state;\r\n    let { items, addedCartProduct, selectedItem, allProducts } = adminReducer;\r\n    return{\r\n      initialText : \"Hello\",\r\n      listProducts : items,\r\n      addedCartProduct : addedCartProduct,\r\n      selectedItem : selectedItem,\r\n      allProducts : allProducts\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch:any) => {\r\n    return bindActionCreators ({\r\n        ...Actions\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps);","import * as React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign } from '@fortawesome/free-solid-svg-icons';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport './Product.scss';\r\nfunction Product(props:any) {\r\n  let { product, addProductToCart } = props;\r\n  let { name, image, price, discount} = product;\r\n  return (\r\n      <>\r\n      <Card>\r\n        <CardActionArea>\r\n          <picture>\r\n                  <img alt=\"test\" className=\"product-img\" src={image} />\r\n          </picture>\r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12}>\r\n                <p className=\"product-title\">{name}</p>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <div className=\"product-price-block\">\r\n                    <div className=\"new-price\">\r\n                    <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button>{price.actual}\r\n                    </div>\r\n                    <div className=\"old-price\">\r\n                    <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button>{price.display}\r\n                    </div>\r\n                    <div className=\"price-offer\">\r\n                        {discount}% off\r\n                    </div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className=\"add-to-cart-section\">\r\n          <Button onClick={() => addProductToCart(product)} className=\"add-to-cart-btn\" size=\"small\" color=\"primary\">\r\n            Add To Cart\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default Product;","import * as React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SnackbarComponent(props:any) {\r\n \r\n  return (\r\n    <>\r\n    <Snackbar open={true} anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }} >\r\n        <Alert severity=\"success\">\r\n          {props.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}","import * as React from 'react';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport { Button, Dialog, Radio, RadioGroup, FormControlLabel } from '@material-ui/core';\r\n\r\nfunction PaperComponent(props: PaperProps) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function SortByMobile(props:any) {\r\n  let { sortByPrice, selectedItem, handleClose } = props;\r\n  const [value, setValue] = React.useState(selectedItem);\r\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue((event.target as HTMLInputElement).value);\r\n  };\r\n  console.info(\"value\",value);\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={true}\r\n        onClose={() => handleClose()}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          Sort Options\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={value} onChange={handleRadioChange}>\r\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"Price -- High Low\" />\r\n            <FormControlLabel value=\"2\" control={<Radio />} label=\"Price -- Low High\" />\r\n            <FormControlLabel value=\"3\" control={<Radio />} label=\"Discount\" />\r\n          </RadioGroup>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"sort-mb-btn\">\r\n          <Button className=\"sort-mb-btn-lt\" autoFocus onClick={() => handleClose()} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button className=\"sort-mb-btn-rt\" onClick={() => sortByPrice(value)} color=\"primary\">\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport FilterBy from './FilterBy';\r\nfunction PaperComponent(props: PaperProps) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function FilterByMobile(props:any) {\r\n  let { handleFilterPrice, handleClose, filterByPrice } = props;\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={true}\r\n        onClose={() => handleClose()}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n        Filters\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <FilterBy handleFilterPrice={handleFilterPrice} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"sort-mb-btn\">\r\n          <Button className=\"sort-mb-btn-lt\" autoFocus onClick={() => handleClose()} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button className=\"sort-mb-btn-rt\" onClick={() => filterByPrice()} color=\"primary\">\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport { Grid, Hidden, Button } from '@material-ui/core';\r\nimport FilterBy from \"./../FilterBy/FilterBy\";\r\nimport SortBy from \"./../SortBy/SortBy\";\r\nimport './ListPage.scss';\r\nimport Container  from './../../container/index';\r\nimport Product from \"./../Product/Product\";\r\nimport SnackbarComponent from \"./../Common/SnackBar/SnackBar\";\r\nimport SortByMobile from \"./../SortBy/SortByMobile\";\r\nimport FilterByMobile from \"./../FilterBy/FilterByMobile\";\r\nclass ListPage extends React.Component< any , any> {\r\n  state = {\r\n    openMessgeContainer : false,\r\n    message : '',\r\n    fromPrice : 1000,\r\n    toPrice : 10000,\r\n    isShow : false,\r\n    isShowFilter : false\r\n  }\r\n  addProductToCart = (productObj:any) => {\r\n    this.triggerMsg( productObj.name +' successfully added into Cart');\r\n    let { addProductToCart } = this.props;\r\n    addProductToCart(productObj);\r\n  }\r\n\r\n  sortByPrice = (sortKey:any) => {\r\n    let { listProducts } = this.props;\r\n    let updateProdcut = []\r\n    if(sortKey === 1) {\r\n      updateProdcut = listProducts.sort((a:any, b:any) => b.price.actual - a.price.actual );\r\n    } else if(sortKey === 2){\r\n      updateProdcut = listProducts.sort((a:any, b:any) => a.price.actual - b.price.actual );\r\n    } else {\r\n      updateProdcut = listProducts.sort((a:any, b:any) => b.discount - a.discount );\r\n    }\r\n    let { updateProdcutList } = this.props;\r\n    let payload = {\r\n      selectedItem : sortKey,\r\n      items : updateProdcut\r\n    }\r\n    updateProdcutList(payload);\r\n    this.setState({ isShow : false });\r\n  }\r\n  filterByPrice = () => {\r\n    let { fromPrice, toPrice } = this.state;\r\n    let { allProducts, updateProdcutList } = this.props;\r\n    let updateProdcut = []\r\n    updateProdcut = allProducts.filter((item:any) => { \r\n      if(item.price.actual > fromPrice && item.price.actual < toPrice ){\r\n        return true;\r\n      } else {\r\n        return false;\r\n      } \r\n    });\r\n    let payload = {\r\n      selectedItem : 0,\r\n      items : updateProdcut\r\n    };\r\n    updateProdcutList(payload);\r\n    this.setState({ isShowFilter : false });\r\n  }\r\n  handleFilterPrice = (price:any) => {\r\n    this.setState({ fromPrice: price[0] , toPrice: price[1] });\r\n  }\r\n  triggerMsg = (msg:any) => {\r\n      this.setState({\r\n          openMessgeContainer: true,\r\n          open: false,\r\n          message: msg,\r\n      });\r\n      setTimeout(() => {\r\n          this.setState({\r\n              openMessgeContainer: false\r\n          })\r\n      }, 5000);\r\n  }\r\n  isOpenSortBy = () => {\r\n    this.setState({ isShow : true });\r\n  }\r\n  handleClose = () => {\r\n    this.setState({ isShow : false, isShowFilter: false });\r\n  }\r\n  isOpenFilterBy = () => {\r\n    this.setState({ isShowFilter : true });\r\n  }\r\n  render() {\r\n    let { listProducts, selectedItem } = this.props;\r\n    let { openMessgeContainer, message, isShow, isShowFilter } = this.state;\r\n    return (\r\n        <Grid container className=\"list-page\">\r\n            <Hidden only={['sm', 'xs']}>\r\n              <Grid container item lg={2} xl={2} >\r\n                  <Grid className=\"filter-block\" item lg xl >\r\n                      <p className=\"filter-title\"> Filters </p>\r\n                      <FilterBy handleFilterPrice={this.handleFilterPrice}/>\r\n                      <Button className=\"filter-apply-btn\" variant=\"contained\" color=\"primary\" onClick={() => this.filterByPrice()}> Apply </Button>\r\n                  </Grid>\r\n              </Grid>\r\n            </Hidden>\r\n            <Hidden only={['md', 'lg']}>\r\n              <Grid className=\"filter-mb\" container item xs={12} sm={12} >\r\n                      <Grid className=\"sort-txt cursor-pt\" item xs={6} sm={6}>\r\n                          <span onClick={() => this.isOpenSortBy()}>Sort </span>\r\n                      </Grid>\r\n                      <Grid className=\"filter-txt cursor-pt\" item xs={6} sm={6}>\r\n                          <span onClick={() => this.isOpenFilterBy()}>Filter </span>\r\n                      </Grid>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid container spacing={3} item lg={10} sm={12} xs={12} xl={10} >\r\n                    <Hidden only={['sm', 'xs']}>\r\n                      <Grid item lg={10}>\r\n                        <SortBy sortByPrice={this.sortByPrice} selectedItem={selectedItem} />\r\n                      </Grid>\r\n                    </Hidden>\r\n                    {listProducts.length > 0 ? listProducts.map((row:any, index:any) => (\r\n                    <Grid item lg={3} xl={3} xs={6} sm={6}>\r\n                      <Product addProductToCart={this.addProductToCart} product={row} />\r\n                    </Grid>\r\n                    )) : <Grid item lg={3} xl={3} xs={6} sm={6} className=\"no-data-found\" > <div >\r\n                      No Data Found </div></Grid> }\r\n            </Grid>\r\n            {openMessgeContainer && <SnackbarComponent open={openMessgeContainer} message={message}/> }\r\n            {isShow && <SortByMobile handleClose={this.handleClose} sortByPrice={this.sortByPrice} selectedItem={selectedItem} />}\r\n            {isShowFilter && <FilterByMobile handleClose={this.handleClose} handleFilterPrice={this.handleFilterPrice} filterByPrice={this.filterByPrice} />}\r\n        </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container(ListPage);","import * as React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusCircle, faPlusCircle, faRupeeSign } from '@fortawesome/free-solid-svg-icons'\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport './CartProduct.scss';\r\nfunction CartProduct(props:any) {\r\n  let { product, handleCartCount, uniqueDataCount } = props;\r\n  let { name, image, price, discount } = product;\r\n  let count = uniqueDataCount(product);\r\n  return (\r\n      <Grid className=\"cart-prod-items\" container>\r\n          <Grid item className=\"new-price\" xl={3} lg={3}>\r\n          <picture>\r\n              <img alt=\"test\" className=\"product-img\" src={image} />\r\n          </picture>\r\n          </Grid>\r\n          <Grid item className=\"new-price ca-product-price-st\" xl={4} lg={4}>\r\n                <p className=\"product-title ca-product-title\">\r\n                    {name}\r\n                </p>\r\n                <p>\r\n                  <Grid className=\"product-price-block ca-product-price\" container>\r\n                      <Grid item className=\"new-price\" xs={4}>\r\n                      <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button>{price.actual}\r\n                      </Grid>\r\n                      <Grid item className=\"old-price\" xs={4}>\r\n                      <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button>{price.display}\r\n                      </Grid>\r\n                      <Grid className=\"price-offer\" item xs={4}>\r\n                      {discount}% off\r\n                      </Grid>\r\n                  </Grid>\r\n                </p>\r\n          </Grid>\r\n          <Grid item className=\"new-price ca-product-count\" xl={3} lg={3}>\r\n            <Grid className=\"ca-product-count-sub\" container>\r\n              <Grid item className=\"\">\r\n              <button onClick={() => handleCartCount(product, 0 )} className=\"cart-decrease cursor-pt\">\r\n                  <FontAwesomeIcon icon={faMinusCircle} />\r\n              </button>\r\n              </Grid>\r\n              <Grid item className=\"ca-product-count-input\">\r\n                <input type=\"text\" size={3} value={count} style={{ textAlign: \"center\", border: \"1px solid darkgray\" }}/>\r\n              </Grid>\r\n              <Grid item className=\"\">\r\n                <button onClick={() => handleCartCount(product, 1 )} className=\"cart-increase cursor-pt\">\r\n                    <FontAwesomeIcon icon={faPlusCircle} />\r\n                </button>\r\n              </Grid>\r\n              </Grid>\r\n          </Grid>\r\n          <Grid item className=\"cp-remove-cart-btn\" xl={2} lg={2}>\r\n              <Button className=\"remove-cart-btn\" size=\"small\" color=\"default\" onClick={() => handleCartCount(product, -1 )}> Remove </Button>\r\n          </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n\r\nexport default CartProduct;","import * as React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faRupeeSign, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport './CartProduct.scss';\r\nfunction CartProductMobile(props:any) {\r\n  let { product, handleCartCount, uniqueDataCount } = props;\r\n  let { name, image, price, discount} = product;\r\n  let count = uniqueDataCount(product);\r\n  return (\r\n      <Grid className=\"cart-prod-items\" container>\r\n          <Grid item className=\"new-price\" xs={4} sm={4}>\r\n          <picture>\r\n              <img alt=\"test\" className=\"product-img\" src={image} />\r\n          </picture>\r\n          </Grid>\r\n          <Grid item className=\"new-price\" xs={8} sm={8}>\r\n            <Grid container>\r\n                <Grid item>\r\n                    {name}\r\n                </Grid>\r\n            </Grid>  \r\n                    <p>\r\n                        <div className=\"product-price-block\">\r\n                            <div className=\"new-price\">\r\n                            <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button>{price.actual}\r\n                            </div>\r\n                            <div className=\"old-price\">\r\n                            <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button>{price.display}\r\n                            </div>\r\n                            <div className=\"price-offer\" >\r\n                            {discount}% off\r\n                            </div>\r\n                        </div>\r\n                    </p>\r\n            <Grid container>\r\n                <Grid item>\r\n                    <button onClick={() => handleCartCount(product, 0 )} className=\"cart-decrease cursor-pt\">\r\n                        <FontAwesomeIcon icon={faMinus} />\r\n                    </button>\r\n                    <input type=\"text\" className=\"inputsize\" value={count} size={3} style={{ border: \"1px solid darkgray\", textAlign: \"center\" }} />\r\n                    <button onClick={() => handleCartCount(product, 1 )} className=\"cart-increase cursor-pt\">\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </button>\r\n                </Grid>\r\n            </Grid>\r\n                    <Button className=\"cart-remove-label\" size=\"small\" color=\"default\" onClick={() => handleCartCount(product, -1 )}> Remove </Button>\r\n          </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n\r\nexport default CartProductMobile;","import * as React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./CartPriceDetails.scss\";\r\nfunction CartPriceDetails(props:any) {\r\n  let { cartProduct, cartPriceData } = props;\r\n  let { cartCount , cartDiscountCount, totalPrice } = cartPriceData;\r\n  return (\r\n      <Grid className=\"cart-prod-right\" container>\r\n        <Grid className=\"cart-pd-title\" item xl={12} lg={12}>\r\n          PRICE DETAILS\r\n        </Grid>\r\n        <Grid className=\"cart-pd-content\" item xl={12} lg={12} xs={12} sm={12}>\r\n          <Grid container className=\"cart-pd-content-it\" item xl={12} lg={12} xs={12} sm={12}>\r\n            <Grid xl={4} lg={4} xs={6} sm={6} item className=\"cart-pd-total-lt\"> Price ( {cartProduct.length} item ) </Grid>\r\n            <Grid xl={4} lg={4} xs={2} sm={2} item>:</Grid>\r\n            <Grid xl={4} lg={4} xs={4} sm={4} item className=\"cart-pd-total-rt\"> \r\n              <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button> {cartCount} \r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className=\"cart-pd-content-it\" item xl={12} lg={12}>\r\n            <Grid xl={4} lg={4} xs={6} sm={6} item className=\"cart-pd-total-lt\"> Discount </Grid>\r\n            <Grid xl={4} lg={4} xs={2} sm={2} item>:</Grid>\r\n            <Grid xl={4} lg={4} xs={4} sm={4} item className=\"cart-pd-total-rt\"> \r\n              <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button> {cartDiscountCount}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid className=\"cart-pd-total\" item xl={12} lg={12}>\r\n            <span className=\"cart-pd-total-lt-txt\"> Total Payable </span> <span className=\"cart-pd-total-rt\"> \r\n            <button className=\"price-symbol\"><FontAwesomeIcon icon={faRupeeSign} /></button> {totalPrice}\r\n            </span>\r\n        </Grid>\r\n      </Grid>      \r\n  );\r\n}\r\n\r\nexport default CartPriceDetails;","import ListPage from \"./../ListPage/ListPage\";\r\nimport CartPage from \"./../CartPage/CartPage\"\r\nexport const Routes = [\r\n  {\r\n    path:\"/ListPage\",\r\n    component: ListPage\r\n  },\r\n  {\r\n    path:\"/CartPage\",\r\n    component: CartPage\r\n  }\r\n];\r\n","import * as React from 'react';\r\nimport CartProduct from './../CartProduct/CartProduct';\r\nimport CartProductMobile from './../CartProduct/CartProductMobile';\r\nimport CartPriceDetails from \"./../CartPriceDetails/CartPriceDetails\";\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport Container  from './../../container/index';\r\nimport SnackbarComponent from \"./../Common/SnackBar/SnackBar\";\r\nimport \"./CartPage.scss\";\r\nclass CartPage extends React.Component< any, any> {\r\n  state = {\r\n    openMessgeContainer : false,\r\n    message : ''\r\n  }\r\n  handleCartCount = (productObj:any, key:any) => {\r\n    let { addProductToCart, addedCartProduct, updateCartProdcutList } = this.props;\r\n    let updateProdcut = []\r\n    if(key === 1) {\r\n      this.triggerMsg( productObj.name +' successfully added into Cart');\r\n      addProductToCart(productObj);\r\n    } else if(key === 0){\r\n      let isCheckCount = 0;\r\n      updateProdcut = addedCartProduct.filter((item:any) => { \r\n        if(JSON.stringify(item) === JSON.stringify(productObj) && isCheckCount === 0){\r\n          isCheckCount =1;\r\n          return false;\r\n        } else {\r\n          return true;\r\n        } \r\n      });\r\n      updateCartProdcutList(updateProdcut);\r\n      this.triggerMsg( productObj.name +' successfully removed 1 item from Cart');\r\n    } else {\r\n      this.triggerMsg( productObj.name +' successfully removed from Cart');\r\n      updateProdcut = addedCartProduct.filter((item:any) => JSON.stringify(item) !== JSON.stringify(productObj));\r\n      updateCartProdcutList(updateProdcut);\r\n    }\r\n  }\r\n  uniqueData = () => {\r\n    let { addedCartProduct } = this.props;\r\n    let uniques = [];\r\n    let itemsFound:any = {};\r\n    for(let val of addedCartProduct) {\r\n        let stringified = JSON.stringify(val);\r\n        if(itemsFound[stringified]) { \r\n          continue; \r\n        }\r\n        uniques.push(val);\r\n        itemsFound[stringified] = true;\r\n    }\r\n    return uniques;\r\n  }\r\n  uniqueDataCount = (obj:any) => {\r\n    let { addedCartProduct } = this.props;\r\n    let productCount = 0;\r\n    for(let val of addedCartProduct) {\r\n        if(JSON.stringify(obj) === JSON.stringify(val)) {\r\n          productCount++;\r\n        }\r\n    }\r\n    return productCount;\r\n  }\r\n  getPercentage = (num:any, per:any) => {\r\n    let a = (num/100)*per;\r\n    return Math.ceil(a);\r\n  }\r\n  totalPriceCount = () => {\r\n    let { addedCartProduct } = this.props;\r\n    let cartCount = 0;\r\n    let cartDiscountCount = 0;\r\n    for(let val of addedCartProduct) {\r\n      cartCount = cartCount + val.price.actual;\r\n      cartDiscountCount = cartDiscountCount + this.getPercentage(val.price.actual, val.discount);\r\n    }\r\n    let totalPrice = cartCount - cartDiscountCount;\r\n    return { cartCount , cartDiscountCount, totalPrice };\r\n  }\r\n  triggerMsg = (msg:String) => {\r\n      this.setState({\r\n          openMessgeContainer: true,\r\n          open: false,\r\n          message: msg,\r\n      });\r\n      setTimeout(() => {\r\n          this.setState({\r\n              openMessgeContainer: false\r\n          })\r\n      }, 5000);\r\n  }\r\n  render() {\r\n    let { addedCartProduct } = this.props;\r\n    let { openMessgeContainer, message } = this.state;\r\n    const cartUniqueProduct = this.uniqueData();\r\n    const cartPriceData = this.totalPriceCount();\r\n    return (\r\n      <Grid container spacing={2} className=\"cart-page\">\r\n          <Grid item xl={8} lg={8} xs={12} sm={12} className=\"cart-page-lt\">\r\n              <Hidden only={['xs', 'sm']}>\r\n              {cartUniqueProduct.length > 0 ? cartUniqueProduct.map((row, index) => (\r\n                <CartProduct uniqueDataCount={this.uniqueDataCount} handleCartCount={this.handleCartCount} product={row} />\r\n              )) : <Grid item > No Product Found </Grid>}   \r\n              </Hidden>\r\n              <Hidden only={['md', 'lg']}>\r\n              {cartUniqueProduct.length > 0 ? cartUniqueProduct.map((row, index) => (\r\n                <CartProductMobile uniqueDataCount={this.uniqueDataCount} handleCartCount={this.handleCartCount} product={row} />\r\n              )) : <Grid item > No Product Found </Grid>}  \r\n              </Hidden>\r\n          </Grid>\r\n          <Grid item xl={4} lg={4} xs={12} sm={12} className=\"cart-page-rt\">\r\n              <CartPriceDetails cartProduct={addedCartProduct} cartPriceData={cartPriceData} />\r\n          </Grid>\r\n          {openMessgeContainer && <SnackbarComponent open={openMessgeContainer} message={message}/> }\r\n      </Grid>    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Container(CartPage);","import * as React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport './CartIcon.scss';\r\n\r\nfunction CartIcon(props:any) {\r\n  let { cartCount } = props;\r\n  return (\r\n    <>\r\n    <Link to=\"/CartPage\">\r\n      <button className=\"cart-icon cursor-pt\">\r\n        <FontAwesomeIcon icon={faShoppingCart} /><sup className=\"cart-count\">{cartCount}</sup>\r\n      </button>\r\n    </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CartIcon;","import * as React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { Grid, TextField } from '@material-ui/core';\r\n\r\nfunction Search(props:any) {\r\n  let { isSearch, updateProdcutList, allProducts, toggleSearchBar } = props;\r\n  const searchProduct = (e:any) => {\r\n      let updateProdcut = allProducts.filter( (item:any) =>item.name.toLowerCase().includes(e.target.value));\r\n      let payload = {\r\n          selectedItem : 0,\r\n          items : updateProdcut\r\n        };\r\n      updateProdcutList(payload);\r\n  }\r\n  return (\r\n    <>\r\n     {isSearch ? <Grid className=\"search-box-mb\" item>\r\n          <TextField onKeyPress={searchProduct} />\r\n          <button onClick={() => toggleSearchBar()} className=\"search-icon cursor-pt\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n          </button>\r\n      </Grid> : \r\n      <Grid item>\r\n          <button onClick={() => toggleSearchBar()} className=\"search-icon cursor-pt\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n          </button>\r\n      </Grid>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;","import 'regenerator-runtime/runtime'\r\nimport {  createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n//  Returns the store instance\r\n// It can  also take initialState argument when provided\r\nexport default function configureStore(initialState) {\r\n\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState\r\n  );\r\n  return store;\r\n}\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { Grid } from '@material-ui/core';\r\nimport Container  from './../../../container/index';\r\nimport CartIcon from './../../CartIcon/CartIcon';\r\nimport Search from './../../Search/Search'\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\n\r\nclass Header extends React.Component<any , any> {\r\n    state = {\r\n        isSearch : false,\r\n        searchStr : '',\r\n        isShow : true\r\n    }\r\n    toggleSearchBar = () => {\r\n        let { allProducts, updateProdcutList } = this.props;\r\n        let { isSearch } = this.state;\r\n        if(isSearch) {\r\n            let payload = {\r\n                selectedItem : 0,\r\n                items : allProducts\r\n              };\r\n            updateProdcutList(payload);\r\n            this.setState({ isSearch : false });\r\n        } else {\r\n            this.setState({ isSearch : true });\r\n        }\r\n    }\r\n    render(){\r\n        let { isSearch, isShow } = this.state;\r\n        let { addedCartProduct, updateProdcutList, allProducts } = this.props;\r\n        return (\r\n            <Grid id=\"header\" className=\"header\" container>\r\n                <Grid item sm={2} xs={2}>\r\n                    <Grid container alignItems=\"flex-start\">\r\n                        <Grid item>\r\n                        <Link to=\"/ListPage\">\r\n                            <button className=\"logo-icon cursor-pt\"><FontAwesomeIcon icon={faStar} /></button>\r\n                        </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={10} sm={10}>\r\n                    {isShow && <Grid container alignItems=\"flex-end\" direction=\"row\" justify=\"flex-end\" spacing={2}>\r\n                        <Search isSearch={isSearch} updateProdcutList={updateProdcutList} toggleSearchBar={this.toggleSearchBar} allProducts={allProducts} />\r\n                        <Grid item>\r\n                            <CartIcon cartCount={addedCartProduct.length} />\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nexport default Container(Header);","import * as React from 'react'\r\nimport \"./Footer.scss\";\r\nexport default class Footer extends React.Component {\r\n  render(){\r\n      return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <span className=\"text-muted\">@copyright</span>\r\n        </div>\r\n      </footer>\r\n      )\r\n  }\r\n}","import * as React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { Routes } from \"./RouteConfig\"; \r\nimport { Grid } from '@material-ui/core';\r\nimport Header from \"./../Common/Header/Header\";\r\nimport Footer from \"./../Common/Footer/Footer\";\r\nexport const RouteComponent = (props: IProps) => {\r\n  const routes = Routes;\r\n  return (\r\n    <Grid container>\r\n      <Header />\r\n      <Switch>\r\n        {routes.map((route, index) => (\r\n          <Route\r\n            exact={true}\r\n            key={index}\r\n            path={route.path}\r\n            component={route.component}\r\n          />\r\n        ))}\r\n        <Redirect from=\"/*\" to=\"/ListPage\" />\r\n      </Switch>\r\n      <Footer/>\r\n    </Grid>\r\n  );\r\n};\r\ninterface IProps {\r\n  [keyname: string]: any;\r\n}\r\n\r\nexport default RouteComponent;\r\n","import * as React from \"react\";\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from '../store/configureStore';\r\nimport RouteComponent from './Routing/RouteComponent';\r\nconst store = configureStore({});\r\nclass MainApp extends React.Component<{}, any> {\r\n    public render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <RouteComponent />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\nexport default MainApp;\r\n\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainApp from './components/MainApp'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}